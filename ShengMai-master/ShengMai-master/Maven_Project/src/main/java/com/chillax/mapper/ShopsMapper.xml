<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chillax.mapper.ShopsMapper">

	<!-- ..................................................新增 .................................................. -->

	<!-- 商铺、菜品多对多，根据商铺id查询囊括的菜品 -->
	<resultMap type="com.chillax.dto.Shops" id="HaveGoodListResultMap">
		<!-- <id column="id" jdbcType="INTEGER" property="id" /> <result column="shopid" 
			jdbcType="INTEGER" property="shopid" /> -->
		<id column="shopid" jdbcType="INTEGER" property="shopid" />
		<result column="distance" jdbcType="DOUBLE" property="distance" />
		<result column="sales" jdbcType="INTEGER" property="sales" />
		<result column="logo" jdbcType="VARCHAR" property="logo" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="activity" jdbcType="VARCHAR" property="activity" />
		<result column="shopflag" jdbcType="INTEGER" property="shopflag" />
		<result column="place" jdbcType="VARCHAR" property="place" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="firsteat" jdbcType="VARCHAR" property="firsteat" />
		<result column="discount" jdbcType="VARCHAR" property="discount" />
		<result column="cutprice" jdbcType="VARCHAR" property="cutprice" />
		<result column="wait" jdbcType="INTEGER" property="wait" />
		<result column="startprice" jdbcType="INTEGER" property="startprice" />
		<result column="expressprice" jdbcType="INTEGER" property="expressprice" />

		<collection property="goodsList" ofType="com.chillax.dto.Goods">
			<!-- <id column="id" jdbcType="INTEGER" property="id" /> <result column="goodid" 
				jdbcType="INTEGER" property="goodid" /> -->
			<id column="goodid" jdbcType="INTEGER" property="goodid" />
			<result column="goodname" jdbcType="VARCHAR" property="name" />
			<result column="pic" jdbcType="VARCHAR" property="pic" />
			<result column="sold" jdbcType="INTEGER" property="sold" />
			<result column="price" jdbcType="DECIMAL" property="price" />
			<result column="goodflag" jdbcType="INTEGER" property="goodflag" />
			<result column="goodtypeid" jdbcType="VARCHAR" property="goodtypeid" />
		</collection>
	</resultMap>

	<select id="selectOneToManyByShopid" parameterType="java.lang.Integer"
		resultMap="HaveGoodListResultMap">
		SELECT
		s.shopid, s.distance, s.sales, s.logo, s.name, s.activity, s.shopflag, s.place,
		s.tel, s.firsteat,s.discount, s.cutprice, s.wait, s.startprice,s.expressprice,
		g.goodid, g.name as goodname, g.pic, g.sold, g.price, g.goodflag, g.goodtypeid
		FROM
		shops s
		INNER JOIN goodandshop gs ON s.shopid = gs.tbShopId
		INNER JOIN goods g ON gs.tbGoodId = g.goodid
		WHERE
		s.shopid = #{shopid}
		AND gs.goodofshopflag = 1
	</select>



	<!-- ..................................................以下为逆向生成的............................................................... -->


	<resultMap id="BaseResultMap" type="com.chillax.dto.Shops">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="shopid" jdbcType="INTEGER" property="shopid" />
		<result column="distance" jdbcType="DOUBLE" property="distance" />
		<result column="sales" jdbcType="INTEGER" property="sales" />
		<result column="logo" jdbcType="VARCHAR" property="logo" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="activity" jdbcType="VARCHAR" property="activity" />
		<result column="shopflag" jdbcType="INTEGER" property="shopflag" />
		<result column="place" jdbcType="VARCHAR" property="place" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="firsteat" jdbcType="VARCHAR" property="firsteat" />
		<result column="discount" jdbcType="VARCHAR" property="discount" />
		<result column="cutprice" jdbcType="VARCHAR" property="cutprice" />
		<result column="wait" jdbcType="INTEGER" property="wait" />
		<result column="startprice" jdbcType="INTEGER" property="startprice" />
		<result column="expressprice" jdbcType="INTEGER" property="expressprice" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, shopid, distance, sales, logo, name, activity, shopflag, place,
		tel, firsteat,
		discount, cutprice, wait, startprice, expressprice
	</sql>
	<select id="selectByExample" parameterType="com.chillax.dto.ShopsExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shops
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from shops
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from shops
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.chillax.dto.ShopsExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from shops
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.chillax.dto.Shops">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into shops (id, shopid, distance,
		sales, logo, name,
		activity,
		shopflag, place,
		tel, firsteat, discount,
		cutprice, wait, startprice,
		expressprice)
		values (#{id,jdbcType=INTEGER},
		#{shopid,jdbcType=INTEGER},
		#{distance,jdbcType=DOUBLE},
		#{sales,jdbcType=INTEGER}, #{logo,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{activity,jdbcType=VARCHAR},
		#{shopflag,jdbcType=INTEGER},
		#{place,jdbcType=VARCHAR},
		#{tel,jdbcType=VARCHAR}, #{firsteat,jdbcType=VARCHAR},
		#{discount,jdbcType=VARCHAR},
		#{cutprice,jdbcType=VARCHAR},
		#{wait,jdbcType=INTEGER},
		#{startprice,jdbcType=INTEGER},
		#{expressprice,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.chillax.dto.Shops">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into shops
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="shopid != null">
				shopid,
			</if>
			<if test="distance != null">
				distance,
			</if>
			<if test="sales != null">
				sales,
			</if>
			<if test="logo != null">
				logo,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="activity != null">
				activity,
			</if>
			<if test="shopflag != null">
				shopflag,
			</if>
			<if test="place != null">
				place,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="firsteat != null">
				firsteat,
			</if>
			<if test="discount != null">
				discount,
			</if>
			<if test="cutprice != null">
				cutprice,
			</if>
			<if test="wait != null">
				wait,
			</if>
			<if test="startprice != null">
				startprice,
			</if>
			<if test="expressprice != null">
				expressprice,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="shopid != null">
				#{shopid,jdbcType=INTEGER},
			</if>
			<if test="distance != null">
				#{distance,jdbcType=DOUBLE},
			</if>
			<if test="sales != null">
				#{sales,jdbcType=INTEGER},
			</if>
			<if test="logo != null">
				#{logo,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="activity != null">
				#{activity,jdbcType=VARCHAR},
			</if>
			<if test="shopflag != null">
				#{shopflag,jdbcType=INTEGER},
			</if>
			<if test="place != null">
				#{place,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="firsteat != null">
				#{firsteat,jdbcType=VARCHAR},
			</if>
			<if test="discount != null">
				#{discount,jdbcType=VARCHAR},
			</if>
			<if test="cutprice != null">
				#{cutprice,jdbcType=VARCHAR},
			</if>
			<if test="wait != null">
				#{wait,jdbcType=INTEGER},
			</if>
			<if test="startprice != null">
				#{startprice,jdbcType=INTEGER},
			</if>
			<if test="expressprice != null">
				#{expressprice,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.chillax.dto.ShopsExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from shops
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update shops
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.shopid != null">
				shopid = #{record.shopid,jdbcType=INTEGER},
			</if>
			<if test="record.distance != null">
				distance = #{record.distance,jdbcType=DOUBLE},
			</if>
			<if test="record.sales != null">
				sales = #{record.sales,jdbcType=INTEGER},
			</if>
			<if test="record.logo != null">
				logo = #{record.logo,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.activity != null">
				activity = #{record.activity,jdbcType=VARCHAR},
			</if>
			<if test="record.shopflag != null">
				shopflag = #{record.shopflag,jdbcType=INTEGER},
			</if>
			<if test="record.place != null">
				place = #{record.place,jdbcType=VARCHAR},
			</if>
			<if test="record.tel != null">
				tel = #{record.tel,jdbcType=VARCHAR},
			</if>
			<if test="record.firsteat != null">
				firsteat = #{record.firsteat,jdbcType=VARCHAR},
			</if>
			<if test="record.discount != null">
				discount = #{record.discount,jdbcType=VARCHAR},
			</if>
			<if test="record.cutprice != null">
				cutprice = #{record.cutprice,jdbcType=VARCHAR},
			</if>
			<if test="record.wait != null">
				wait = #{record.wait,jdbcType=INTEGER},
			</if>
			<if test="record.startprice != null">
				startprice = #{record.startprice,jdbcType=INTEGER},
			</if>
			<if test="record.expressprice != null">
				expressprice = #{record.expressprice,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update shops
		set id = #{record.id,jdbcType=INTEGER},
		shopid =
		#{record.shopid,jdbcType=INTEGER},
		distance =
		#{record.distance,jdbcType=DOUBLE},
		sales =
		#{record.sales,jdbcType=INTEGER},
		logo =
		#{record.logo,jdbcType=VARCHAR},
		name =
		#{record.name,jdbcType=VARCHAR},
		activity =
		#{record.activity,jdbcType=VARCHAR},
		shopflag =
		#{record.shopflag,jdbcType=INTEGER},
		place =
		#{record.place,jdbcType=VARCHAR},
		tel = #{record.tel,jdbcType=VARCHAR},
		firsteat = #{record.firsteat,jdbcType=VARCHAR},
		discount =
		#{record.discount,jdbcType=VARCHAR},
		cutprice =
		#{record.cutprice,jdbcType=VARCHAR},
		wait =
		#{record.wait,jdbcType=INTEGER},
		startprice =
		#{record.startprice,jdbcType=INTEGER},
		expressprice =
		#{record.expressprice,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.chillax.dto.Shops">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update shops
		<set>
			<if test="shopid != null">
				shopid = #{shopid,jdbcType=INTEGER},
			</if>
			<if test="distance != null">
				distance = #{distance,jdbcType=DOUBLE},
			</if>
			<if test="sales != null">
				sales = #{sales,jdbcType=INTEGER},
			</if>
			<if test="logo != null">
				logo = #{logo,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="activity != null">
				activity = #{activity,jdbcType=VARCHAR},
			</if>
			<if test="shopflag != null">
				shopflag = #{shopflag,jdbcType=INTEGER},
			</if>
			<if test="place != null">
				place = #{place,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="firsteat != null">
				firsteat = #{firsteat,jdbcType=VARCHAR},
			</if>
			<if test="discount != null">
				discount = #{discount,jdbcType=VARCHAR},
			</if>
			<if test="cutprice != null">
				cutprice = #{cutprice,jdbcType=VARCHAR},
			</if>
			<if test="wait != null">
				wait = #{wait,jdbcType=INTEGER},
			</if>
			<if test="startprice != null">
				startprice = #{startprice,jdbcType=INTEGER},
			</if>
			<if test="expressprice != null">
				expressprice = #{expressprice,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chillax.dto.Shops">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update shops
		set shopid = #{shopid,jdbcType=INTEGER},
		distance =
		#{distance,jdbcType=DOUBLE},
		sales = #{sales,jdbcType=INTEGER},
		logo =
		#{logo,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		activity =
		#{activity,jdbcType=VARCHAR},
		shopflag = #{shopflag,jdbcType=INTEGER},
		place = #{place,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		firsteat = #{firsteat,jdbcType=VARCHAR},
		discount =
		#{discount,jdbcType=VARCHAR},
		cutprice = #{cutprice,jdbcType=VARCHAR},
		wait = #{wait,jdbcType=INTEGER},
		startprice =
		#{startprice,jdbcType=INTEGER},
		expressprice =
		#{expressprice,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>