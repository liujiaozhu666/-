package com.chillax.dto;

import java.util.ArrayList;
import java.util.List;

public class GoodtypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public GoodtypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidIsNull() {
            addCriterion("goodtypeid is null");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidIsNotNull() {
            addCriterion("goodtypeid is not null");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidEqualTo(String value) {
            addCriterion("goodtypeid =", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidNotEqualTo(String value) {
            addCriterion("goodtypeid <>", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidGreaterThan(String value) {
            addCriterion("goodtypeid >", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidGreaterThanOrEqualTo(String value) {
            addCriterion("goodtypeid >=", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidLessThan(String value) {
            addCriterion("goodtypeid <", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidLessThanOrEqualTo(String value) {
            addCriterion("goodtypeid <=", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidLike(String value) {
            addCriterion("goodtypeid like", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidNotLike(String value) {
            addCriterion("goodtypeid not like", value, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidIn(List<String> values) {
            addCriterion("goodtypeid in", values, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidNotIn(List<String> values) {
            addCriterion("goodtypeid not in", values, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidBetween(String value1, String value2) {
            addCriterion("goodtypeid between", value1, value2, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypeidNotBetween(String value1, String value2) {
            addCriterion("goodtypeid not between", value1, value2, "goodtypeid");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameIsNull() {
            addCriterion("goodtypename is null");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameIsNotNull() {
            addCriterion("goodtypename is not null");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameEqualTo(String value) {
            addCriterion("goodtypename =", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameNotEqualTo(String value) {
            addCriterion("goodtypename <>", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameGreaterThan(String value) {
            addCriterion("goodtypename >", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameGreaterThanOrEqualTo(String value) {
            addCriterion("goodtypename >=", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameLessThan(String value) {
            addCriterion("goodtypename <", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameLessThanOrEqualTo(String value) {
            addCriterion("goodtypename <=", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameLike(String value) {
            addCriterion("goodtypename like", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameNotLike(String value) {
            addCriterion("goodtypename not like", value, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameIn(List<String> values) {
            addCriterion("goodtypename in", values, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameNotIn(List<String> values) {
            addCriterion("goodtypename not in", values, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameBetween(String value1, String value2) {
            addCriterion("goodtypename between", value1, value2, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andGoodtypenameNotBetween(String value1, String value2) {
            addCriterion("goodtypename not between", value1, value2, "goodtypename");
            return (Criteria) this;
        }

        public Criteria andIncludegoodIsNull() {
            addCriterion("includegood is null");
            return (Criteria) this;
        }

        public Criteria andIncludegoodIsNotNull() {
            addCriterion("includegood is not null");
            return (Criteria) this;
        }

        public Criteria andIncludegoodEqualTo(String value) {
            addCriterion("includegood =", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodNotEqualTo(String value) {
            addCriterion("includegood <>", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodGreaterThan(String value) {
            addCriterion("includegood >", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodGreaterThanOrEqualTo(String value) {
            addCriterion("includegood >=", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodLessThan(String value) {
            addCriterion("includegood <", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodLessThanOrEqualTo(String value) {
            addCriterion("includegood <=", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodLike(String value) {
            addCriterion("includegood like", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodNotLike(String value) {
            addCriterion("includegood not like", value, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodIn(List<String> values) {
            addCriterion("includegood in", values, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodNotIn(List<String> values) {
            addCriterion("includegood not in", values, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodBetween(String value1, String value2) {
            addCriterion("includegood between", value1, value2, "includegood");
            return (Criteria) this;
        }

        public Criteria andIncludegoodNotBetween(String value1, String value2) {
            addCriterion("includegood not between", value1, value2, "includegood");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagIsNull() {
            addCriterion("goodtypeflag is null");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagIsNotNull() {
            addCriterion("goodtypeflag is not null");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagEqualTo(Integer value) {
            addCriterion("goodtypeflag =", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagNotEqualTo(Integer value) {
            addCriterion("goodtypeflag <>", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagGreaterThan(Integer value) {
            addCriterion("goodtypeflag >", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodtypeflag >=", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagLessThan(Integer value) {
            addCriterion("goodtypeflag <", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagLessThanOrEqualTo(Integer value) {
            addCriterion("goodtypeflag <=", value, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagIn(List<Integer> values) {
            addCriterion("goodtypeflag in", values, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagNotIn(List<Integer> values) {
            addCriterion("goodtypeflag not in", values, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagBetween(Integer value1, Integer value2) {
            addCriterion("goodtypeflag between", value1, value2, "goodtypeflag");
            return (Criteria) this;
        }

        public Criteria andGoodtypeflagNotBetween(Integer value1, Integer value2) {
            addCriterion("goodtypeflag not between", value1, value2, "goodtypeflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goodtype
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goodtype
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}